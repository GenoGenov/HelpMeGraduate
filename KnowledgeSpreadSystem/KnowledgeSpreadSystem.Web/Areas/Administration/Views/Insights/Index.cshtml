@using Kendo.Mvc.UI
@using KnowledgeSpreadSystem.Web.Areas.Administration.ViewModels.Insight
@(Html.Kendo()
          .Grid<InsightViewModel>()
          .Name("grid-insights")
          .Columns(columns =>
                       {
                           columns.Bound(model => model.Author);
                           columns.Bound(model => model.Content);
                           columns.Bound(model => model.Target);
                           columns.Bound(model => model.CreatedOn);
                           columns.Bound(model => model.ModifiedOn);
                           columns.Command(command =>
                                               {
                                                   command.Destroy();
                                               });
                       })
                       .ColumnMenu()
          .Pageable(page =>
                        {
                            page.PreviousNext(true);
                            page.Numeric(true);
                            page.Refresh(true);
                        })
          .Sortable(sort =>
                        {
                            sort.AllowUnsort(true);
                            sort.SortMode(GridSortMode.SingleColumn);
                        })
          .Groupable()
          .Filterable(filter =>
                      {
                          filter.Mode(GridFilterMode.Row);
                      })
          .Resizable(resize => resize.Columns(true))
          .Navigatable()
          .Editable(edit =>
                        {
                            edit.Mode(GridEditMode.PopUp);
                        })
          .Selectable(select => select.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Cell))
          .DataSource(data => data.Ajax()
                                  .Model(m => m.Id(b => b.Id))
                                  .PageSize(10)
                                  .ServerOperation(true)
                                  .Create("Create", "Resources")
                                  .Events(events =>
                                              {
                                                  events.RequestEnd("onRequestEnd");
                                                  events.Error("handleError");
                                              })
                                          .Read("Read", "Insights")
                                          .Destroy("Delete", "Insights"))
          .Resizable(x => { x.Columns(true); }))


