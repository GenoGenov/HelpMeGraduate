@using Kendo.Mvc.UI
@using KnowledgeSpreadSystem.Web.Helpers
@using KnowledgeSpreadSystem.Web.ViewModels.Insight
@using KnowledgeSpreadSystem.Web.ViewModels.Resource
<div>
    <script src="~/Scripts/rater/rater.js"></script>
    <div class="alert alert-info text-center">
        Resources
    </div>

    <script>
        function ratify() {
            var $rating = $('.star-rating[data-rating]');
            $rating.each(function (index, element) {
                var rating = Math.round(parseFloat($(element).attr('data-rating')));
                $(element).find('input:nth-of-type(' + rating + ')').prop('checked', 'checked');
                $(element).find('input').prop('disabled', 'disabled');
            });
        }

        function populateRating(id) {
            var url = '/Ratings/GetTotalRating/' + id;
            $.get(url)
                .done(function(data) {
                    $('#' + id).html(data);
                    ratify();
            });
        }
    </script>
    

    @(Html.Kendo()
              .Grid<ResourceViewModel>()
              .Name("grid-resources")
              .Columns(cols =>
                           {
                               cols.Template(@<text></text>).ClientTemplate("<div class='resource-type-image' style='display: inline-block; width: 30px; height: 30px;'><img src=\" #= ImagePath # \" alt=\"#=FileExtension#\" style='width: 100%; height: 100%' /></div>");
                               cols.Bound(x => x.Name).ClientTemplate(@Html.ActionLink("#=Name#","Details","Resources",new {id="#=Id#"},null).ToHtmlString());
                               cols.Bound(x => x.Description);
                               cols.Bound(x => x.Rating).ClientTemplate("<div id='#=Id#'>#=populateRating(Id)#</div>");
                               cols.Bound(x => x.Author);
                               cols.Bound(x => x.CreatedOn).ClientTemplate("<strong>#=kendo.toString(CreatedOn,'G')#</strong>");
                               cols.Bound(x => x.ContentSize).HeaderTemplate("Size").Template(x => string.Format("{0:F} MB", x.ContentSize / 1024.0f / 1024.0f)).ClientTemplate("#=(ContentSize/1024/1024).toFixed(2)# MB");
                               cols.Template(@<text>
                                <div class="download-image" style="display: inline-block; width: 30px; height: 30px;">
                                    <img src="@Url.Content("~/Content/images/icons/Download-icon.png")"
                                         alt="Download" style="width: 100%; height: 100%" />
                                </div>
                            </text>).ClientTemplate("<a style='display: inline-block; width: 30px; height: 30px;' href='" + @Url.Action("Download", "Resources", new { id = "itemIDdownld" }).Replace("itemIDdownld", "#=Id#") + "'>" + "<img src=\"" + @Url.Content("~/Content/images/icons/Download-icon.png") + "\" alt='Download' style='width: 100%; height: 100%' /></a>");
                           })
                      .Filterable()
                      .Sortable()
                      .Pageable()
                      .DataSource(data => data
                                              .Ajax()
                                              .Read(read => read.Action((string)@Model.ReadAction, "Resources", new { id = (int)@Model.Id }))
                                              .ServerOperation(true)
                                              ))


</div>
<hr />
<div>
    <div class="alert alert-info text-center">
        Insights
    </div>
    @(Html.Kendo()
          .Grid<InsightViewModel>()
          .Name("grid-insights")
          .Columns(cols =>
                       {
                           cols.Bound(x => x.Content).ClientTemplate("<strong class='text-primary'>"+@Html.ActionLink("#=Content#","Details","Insights",new {id="#=Id#"},null).ToHtmlString()+"</strong>");
                           cols.Bound(x => x.Rating).ClientTemplate("<div id='#=Id#'>#=populateRating(Id)#</div>");
                           cols.Bound(x => x.Author);
                           cols.Bound(x => x.CreatedOn).ClientTemplate("<strong>#=kendo.toString(CreatedOn,'G')#</strong>");
                       })
          .Filterable()
          .Sortable()
          .Pageable()
          .DataSource(data => data
                                  .Ajax()
                                  .Read(read => read.Action((string)@Model.ReadAction, "Insights", new { id = (int)@Model.Id }))
                                  .ServerOperation(true)
                                  ))
</div>
